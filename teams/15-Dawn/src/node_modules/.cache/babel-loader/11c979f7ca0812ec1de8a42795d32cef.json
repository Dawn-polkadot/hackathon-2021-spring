{"ast":null,"code":"export const ApiProxyUri = '/nft-api';\nexport const categoryList = [{\n  id: 0,\n  name: 'All',\n  position: 1\n}, {\n  id: 1,\n  name: '🌈 Art',\n  position: 2\n}, {\n  id: 2,\n  name: '🕹 Games',\n  position: 3\n}];\nexport function getImgBase64(img, cb) {\n  const fileReader = new FileReader();\n\n  fileReader.onloadend = e => {\n    const base64 = e.target.result || ''; // 这里的base64就是我们所要的\n\n    cb(base64.split('base64,')[1]);\n  };\n\n  fileReader.readAsDataURL(img);\n}\nexport function getImgBuffer(imgBase64) {\n  const mime = 'image/jpeg';\n  const bstr = atob(imgBase64);\n  let n = bstr.length;\n  const u8arr = new Uint8Array(n);\n  /* eslint no-plusplus: */\n\n  while (n--) {\n    u8arr[n] = bstr.charCodeAt(n);\n  }\n\n  return new File([u8arr], 'dawn', {\n    type: mime\n  });\n}","map":{"version":3,"sources":["/Users/apple/Documents/do/game/boka/hackathon-2021-spring/teams/15-Dawn/src/src/utils/utils.ts"],"names":["ApiProxyUri","categoryList","id","name","position","getImgBase64","img","cb","fileReader","FileReader","onloadend","e","base64","target","result","split","readAsDataURL","getImgBuffer","imgBase64","mime","bstr","atob","n","length","u8arr","Uint8Array","charCodeAt","File","type"],"mappings":"AAAA,OAAO,MAAMA,WAAmB,GAAG,UAA5B;AAEP,OAAO,MAAMC,YAA4B,GAAG,CAC1C;AACEC,EAAAA,EAAE,EAAE,CADN;AAEEC,EAAAA,IAAI,EAAE,KAFR;AAGEC,EAAAA,QAAQ,EAAE;AAHZ,CAD0C,EAM1C;AACEF,EAAAA,EAAE,EAAE,CADN;AAEEC,EAAAA,IAAI,EAAE,QAFR;AAGEC,EAAAA,QAAQ,EAAE;AAHZ,CAN0C,EAW1C;AACEF,EAAAA,EAAE,EAAE,CADN;AAEEC,EAAAA,IAAI,EAAE,UAFR;AAGEC,EAAAA,QAAQ,EAAE;AAHZ,CAX0C,CAArC;AAkBP,OAAO,SAASC,YAAT,CAAsBC,GAAtB,EAAgCC,EAAhC,EAA8C;AACnD,QAAMC,UAAU,GAAG,IAAIC,UAAJ,EAAnB;;AACAD,EAAAA,UAAU,CAACE,SAAX,GAAwBC,CAAD,IAAO;AAC5B,UAAMC,MAAM,GAAID,CAAC,CAACE,MAAF,CAAUC,MAAX,IAAgC,EAA/C,CAD4B,CACuB;;AACnDP,IAAAA,EAAE,CAACK,MAAM,CAACG,KAAP,CAAa,SAAb,EAAwB,CAAxB,CAAD,CAAF;AACD,GAHD;;AAIAP,EAAAA,UAAU,CAACQ,aAAX,CAAyBV,GAAzB;AACD;AAED,OAAO,SAASW,YAAT,CAAsBC,SAAtB,EAAyC;AAC9C,QAAMC,IAAI,GAAG,YAAb;AACA,QAAMC,IAAI,GAAGC,IAAI,CAACH,SAAD,CAAjB;AACA,MAAII,CAAC,GAAGF,IAAI,CAACG,MAAb;AACA,QAAMC,KAAK,GAAG,IAAIC,UAAJ,CAAeH,CAAf,CAAd;AACA;;AACA,SAAOA,CAAC,EAAR,EAAY;AACVE,IAAAA,KAAK,CAACF,CAAD,CAAL,GAAWF,IAAI,CAACM,UAAL,CAAgBJ,CAAhB,CAAX;AACD;;AACD,SAAO,IAAIK,IAAJ,CAAS,CAACH,KAAD,CAAT,EAAkB,MAAlB,EAA0B;AAAEI,IAAAA,IAAI,EAAET;AAAR,GAA1B,CAAP;AACD","sourcesContent":["export const ApiProxyUri: string = '/nft-api';\n\nexport const categoryList: CategoryType[] = [\n  {\n    id: 0,\n    name: 'All',\n    position: 1,\n  },\n  {\n    id: 1,\n    name: '🌈 Art',\n    position: 2,\n  },\n  {\n    id: 2,\n    name: '🕹 Games',\n    position: 3,\n  },\n];\n\nexport function getImgBase64(img: any, cb: Function) {\n  const fileReader = new FileReader();\n  fileReader.onloadend = (e) => {\n    const base64 = (e.target!.result as string) || ''; // 这里的base64就是我们所要的\n    cb(base64.split('base64,')[1]);\n  };\n  fileReader.readAsDataURL(img);\n}\n\nexport function getImgBuffer(imgBase64: string) {\n  const mime = 'image/jpeg';\n  const bstr = atob(imgBase64);\n  let n = bstr.length;\n  const u8arr = new Uint8Array(n);\n  /* eslint no-plusplus: */\n  while (n--) {\n    u8arr[n] = bstr.charCodeAt(n);\n  }\n  return new File([u8arr], 'dawn', { type: mime });\n}\n"]},"metadata":{},"sourceType":"module"}