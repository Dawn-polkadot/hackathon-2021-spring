{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/apple/Documents/do/game/boka/hackathon-2021-spring/teams/15-Dawn/src/src/components/pages/SearchPage/SearchPage.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useTranslation } from 'react-i18next';\nimport { ApiProxyUri } from '../../../utils/utils';\nimport NftCard from '../../common/NftCard/NftCard';\nimport Col from '../../common/ui-library/Col/Col';\nimport Row from '../../common/ui-library/Row/Row';\nimport { H4, GradientText } from '../../common/Title/Title';\nimport useQuery from '../../../hooks/useQuery';\n\nconst SearchPage = ({\n  setIsLoading\n}) => {\n  _s();\n\n  // Nft list in state\n  const [nftList, setNftList] = useState([]);\n  const query = useQuery();\n  useEffect(() => {\n    async function fetchData() {\n      setIsLoading(true);\n      const res = await axios.get(`${ApiProxyUri}/nfts`);\n      setNftList(res.data.nfts);\n      setIsLoading(false);\n    }\n\n    fetchData();\n  }, [setIsLoading]);\n  const {\n    t\n  } = useTranslation();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(H4, {\n      style: {\n        margin: '20px'\n      },\n      children: [t('searchPage.resultsFor'), \" \", /*#__PURE__*/_jsxDEV(GradientText, {\n        children: [\" \", query.get('q'), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 67\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: [nftList === null || nftList === void 0 ? void 0 : nftList.map((nft, index) => /*#__PURE__*/_jsxDEV(NftCard, {\n        nft: nft\n      }, nft.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(Col, {\n        size: \"20\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(SearchPage, \"ARZYh9Os6fkamJFfBzp6Ho1rDI0=\", false, function () {\n  return [useQuery, useTranslation];\n});\n\n_c = SearchPage;\nexport default SearchPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchPage\");","map":{"version":3,"sources":["/Users/apple/Documents/do/game/boka/hackathon-2021-spring/teams/15-Dawn/src/src/components/pages/SearchPage/SearchPage.tsx"],"names":["React","useEffect","useState","axios","useTranslation","ApiProxyUri","NftCard","Col","Row","H4","GradientText","useQuery","SearchPage","setIsLoading","nftList","setNftList","query","fetchData","res","get","data","nfts","t","margin","map","nft","index","id"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,SAASC,WAAT,QAA4B,sBAA5B;AACA,OAAOC,OAAP,MAAoB,8BAApB;AACA,OAAOC,GAAP,MAAgB,iCAAhB;AACA,OAAOC,GAAP,MAAgB,iCAAhB;AACA,SAASC,EAAT,EAAaC,YAAb,QAAiC,0BAAjC;AACA,OAAOC,QAAP,MAAqB,yBAArB;;AAEA,MAAMC,UAAsC,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAsB;AAAA;;AAEnE;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAC,EAAD,CAAtC;AAEA,QAAMc,KAAK,GAAGL,QAAQ,EAAtB;AAEAV,EAAAA,SAAS,CAAG,MAAM;AAChB,mBAAegB,SAAf,GAA2B;AACzBJ,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACA,YAAMK,GAAG,GAAG,MAAMf,KAAK,CAACgB,GAAN,CAAW,GAAEd,WAAY,OAAzB,CAAlB;AACAU,MAAAA,UAAU,CAACG,GAAG,CAACE,IAAJ,CAASC,IAAV,CAAV;AACAR,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD;;AACDI,IAAAA,SAAS;AACV,GARQ,EAQN,CAACJ,YAAD,CARM,CAAT;AAUA,QAAM;AAAES,IAAAA;AAAF,MAAQlB,cAAc,EAA5B;AAEA,sBACE;AAAA,4BACE,QAAC,EAAD;AAAI,MAAA,KAAK,EAAE;AAAEmB,QAAAA,MAAM,EAAE;AAAV,OAAX;AAAA,iBAAgCD,CAAC,CAAC,uBAAD,CAAjC,oBAA4D,QAAC,YAAD;AAAA,wBAAgBN,KAAK,CAACG,GAAN,CAAU,GAAV,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA,cAA5D;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,GAAD;AAAA,iBACGL,OADH,aACGA,OADH,uBACGA,OAAO,CAAEU,GAAT,CAAa,CAACC,GAAD,EAAMC,KAAN,kBACZ,QAAC,OAAD;AAAsB,QAAA,GAAG,EAAED;AAA3B,SAAcA,GAAG,CAACE,EAAlB;AAAA;AAAA;AAAA;AAAA,cADD,CADH,eAIE,QAAC,GAAD;AAAK,QAAA,IAAI,EAAC;AAAV;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAWD,CA9BD;;GAAMf,U;UAKUD,Q,EAYAP,c;;;KAjBVQ,U;AAgCN,eAAeA,UAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useTranslation } from 'react-i18next';\nimport { ApiProxyUri } from '../../../utils/utils';\nimport NftCard from '../../common/NftCard/NftCard';\nimport Col from '../../common/ui-library/Col/Col';\nimport Row from '../../common/ui-library/Row/Row';\nimport { H4, GradientText } from '../../common/Title/Title';\nimport useQuery from '../../../hooks/useQuery';\n\nconst SearchPage: React.FC<LoadablePageType> = ({ setIsLoading }) => {\n\n  // Nft list in state\n  const [nftList, setNftList] = useState([] as NftObjectType[]);\n\n  const query = useQuery();\n\n  useEffect(  () => {\n    async function fetchData() {\n      setIsLoading(true);\n      const res = await axios.get(`${ApiProxyUri}/nfts`);\n      setNftList(res.data.nfts);\n      setIsLoading(false);\n    }\n    fetchData();\n  }, [setIsLoading]);\n\n  const { t } = useTranslation();\n\n  return (\n    <>\n      <H4 style={{ margin: '20px' }}>{t('searchPage.resultsFor')} <GradientText> {query.get('q')} </GradientText></H4>\n      <Row>\n        {nftList?.map((nft, index) => (\n          <NftCard key={nft.id} nft={nft} />\n        ))}\n        <Col size=\"20\" />\n      </Row>\n    </>\n  );\n};\n\nexport default SearchPage;"]},"metadata":{},"sourceType":"module"}