{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/apple/Documents/do/game/boka/hackathon-2021-spring/teams/15-Dawn/src/src/components/common/InputBox/InputBox.tsx\";\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\nimport React from 'react';\nimport styled from 'styled-components';\nimport Select from 'react-select';\nimport Input from '../ui-library/Input/Input';\nimport TextArea from '../ui-library/TextArea/TextArea';\nimport CheckBox from '../ui-library/CheckBox/CheckBox';\nimport UploadBox from '../ui-library/UploadBox/UploadBox';\nimport Row from '../ui-library/Row/Row';\nimport Col from '../ui-library/Col/Col';\nimport { H3, SubTitle } from '../Title/Title';\nconst LabelStyled = styled(H3)`\n  margin-right:30px;\n  font-size: 20px;\n  padding-left:0px;\n  margin-bottom:10px;\n`;\n_c = LabelStyled;\nexport const InputBoxStandart = props => {\n  const {\n    label,\n    subTitle,\n    onChange,\n    ...rest\n  } = props;\n\n  const updateField = e => {\n    onChange(e.target.name, e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [label && /*#__PURE__*/_jsxDEV(LabelStyled, {\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      medium: true,\n      onChange: updateField,\n      light: true,\n      ...rest\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), subTitle && /*#__PURE__*/_jsxDEV(SubTitle, {\n      children: subTitle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 20\n    }, this)]\n  }, void 0, true);\n}; // TextArea input (<textarea>)\n\n_c2 = InputBoxStandart;\nexport const InputBoxTextArea = props => {\n  const {\n    label,\n    subTitle,\n    value,\n    onChange,\n    ...rest\n  } = props;\n\n  const updateField = e => {\n    onChange(e.target.name, e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [label && /*#__PURE__*/_jsxDEV(LabelStyled, {\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(TextArea, {\n      onChange: updateField,\n      medium: true,\n      light: true,\n      ...rest,\n      children: value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), subTitle && /*#__PURE__*/_jsxDEV(SubTitle, {\n      children: subTitle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 20\n    }, this)]\n  }, void 0, true);\n}; // Toggle input\n\n_c3 = InputBoxTextArea;\nexport const InputBoxToggle = props => {\n  const {\n    label,\n    subTitle,\n    name,\n    onChange\n  } = props;\n\n  const updateField = e => {\n    onChange(e.target.name, e.target.checked);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Row, {\n    children: [/*#__PURE__*/_jsxDEV(Col, {\n      children: [label && /*#__PURE__*/_jsxDEV(LabelStyled, {\n        children: label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 19\n      }, this), subTitle && /*#__PURE__*/_jsxDEV(SubTitle, {\n        children: subTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 22\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Col, {\n      style: {\n        paddingTop: '30px'\n      },\n      children: /*#__PURE__*/_jsxDEV(CheckBox, {\n        name: name,\n        onToggle: updateField\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 5\n  }, this);\n}; // Upload input\n\n_c4 = InputBoxToggle;\nexport const InputBoxUpload = props => {\n  const {\n    label,\n    subTitle,\n    onChange,\n    name\n  } = props;\n\n  const updateField = e => {\n    onChange(e.target.name, e.target.files[0]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [label && /*#__PURE__*/_jsxDEV(LabelStyled, {\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(UploadBox, {\n      name: name,\n      onChange: updateField,\n      subTitle: subTitle || ''\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}; // selectBox input\n\n_c5 = InputBoxUpload;\nexport const InputBoxSelect = props => {\n  const {\n    label,\n    subTitle,\n    boxOptions,\n    onChange,\n    name\n  } = props;\n\n  const updateField = e => {\n    onChange(name, e.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [label && /*#__PURE__*/_jsxDEV(LabelStyled, {\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Select, {\n      onChange: updateField,\n      options: boxOptions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this), subTitle && /*#__PURE__*/_jsxDEV(SubTitle, {\n      children: subTitle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 20\n    }, this)]\n  }, void 0, true);\n}; // Standard input for properties\n\n_c6 = InputBoxSelect;\nexport const InputBoxProperties = props => {\n  const {\n    label,\n    subTitle,\n    name\n  } = props;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [label && /*#__PURE__*/_jsxDEV(LabelStyled, {\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        size: \"50\",\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          full: true,\n          light: true\n        }, `key-${name}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        size: \"50\",\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          full: true,\n          light: true\n        }, `value-${name}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }, this), subTitle && /*#__PURE__*/_jsxDEV(SubTitle, {\n      children: subTitle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 20\n    }, this)]\n  }, void 0, true);\n};\n_c7 = InputBoxProperties;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n\n$RefreshReg$(_c, \"LabelStyled\");\n$RefreshReg$(_c2, \"InputBoxStandart\");\n$RefreshReg$(_c3, \"InputBoxTextArea\");\n$RefreshReg$(_c4, \"InputBoxToggle\");\n$RefreshReg$(_c5, \"InputBoxUpload\");\n$RefreshReg$(_c6, \"InputBoxSelect\");\n$RefreshReg$(_c7, \"InputBoxProperties\");","map":{"version":3,"sources":["/Users/apple/Documents/do/game/boka/hackathon-2021-spring/teams/15-Dawn/src/src/components/common/InputBox/InputBox.tsx"],"names":["React","styled","Select","Input","TextArea","CheckBox","UploadBox","Row","Col","H3","SubTitle","LabelStyled","InputBoxStandart","props","label","subTitle","onChange","rest","updateField","e","target","name","value","InputBoxTextArea","InputBoxToggle","checked","paddingTop","InputBoxUpload","files","InputBoxSelect","boxOptions","InputBoxProperties"],"mappings":"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","sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\nimport React from 'react';\nimport styled from 'styled-components';\nimport Select from 'react-select';\nimport Input from '../ui-library/Input/Input';\nimport TextArea from '../ui-library/TextArea/TextArea';\nimport CheckBox from '../ui-library/CheckBox/CheckBox';\nimport UploadBox from '../ui-library/UploadBox/UploadBox';\nimport Row from '../ui-library/Row/Row';\nimport Col from '../ui-library/Col/Col';\nimport { H3, SubTitle } from '../Title/Title';\n\nconst LabelStyled = styled(H3)`\n  margin-right:30px;\n  font-size: 20px;\n  padding-left:0px;\n  margin-bottom:10px;\n`;\n\ninterface InputConfig {\n  label?: string;\n  subTitle?: string;\n}\n\ninterface InputConfigUpload extends \n  InputConfig, React.InputHTMLAttributes<HTMLInputElement>{\n  onChange: any;\n  name: string;\n}\n\ninterface StandartType extends \n  InputConfig, React.InputHTMLAttributes<HTMLInputElement> {\n  onChange: any,\n}\n\ninterface TextAreaType extends \n  InputConfig, React.InputHTMLAttributes<HTMLTextAreaElement> {\n  onChange: any,\n}\n\ninterface ToggleType extends \n  InputConfig, React.InputHTMLAttributes<HTMLInputElement> {\n  onChange: any,\n  name: string,\n}\n\ninterface TextAreaType extends \n  InputConfig, React.TextareaHTMLAttributes<HTMLTextAreaElement> {}\n\ninterface SelectType extends \n  InputConfig, React.InputHTMLAttributes<HTMLInputElement> {\n  boxOptions?: any[],\n  onChange: any,\n}\n\n\nexport const InputBoxStandart: React.FC<StandartType> = (props) => {\n\n  const { \n    label,\n    subTitle,\n    onChange,\n    ...rest\n  } = props;\n\n  const updateField = \n  (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n    onChange(\n      e.target.name, \n      e.target.value);\n  };\n\n  return (\n    <>\n      {label && <LabelStyled>{label}</LabelStyled> }\n      <Input medium onChange={updateField} light {...rest} />\n      {subTitle && <SubTitle>{subTitle}</SubTitle>}\n    </>\n  );\n\n};\n\n// TextArea input (<textarea>)\nexport const InputBoxTextArea: React.FC<TextAreaType> = (props) => {\n\n  const { \n    label,\n    subTitle,\n    value,\n    onChange,\n    ...rest\n  } = props;\n\n  const updateField = \n  (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n    onChange(\n      e.target.name, \n      e.target.value);\n  };\n  return (\n    <>\n      {label && <LabelStyled>{label}</LabelStyled>}\n      <TextArea onChange={updateField} medium light {...rest}>{value}</TextArea>\n      {subTitle && <SubTitle>{subTitle}</SubTitle>}\n    </>\n  );\n};\n\n// Toggle input\nexport const InputBoxToggle: React.FC<ToggleType> = (props) => {\n\n  const { \n    label,\n    subTitle,\n    name,\n    onChange,\n  } = props;\n\n  const updateField = (e: React.ChangeEvent<HTMLInputElement>) => {\n    onChange(e.target.name, e.target.checked);\n  };\n\n  return (\n    <Row>\n      <Col>\n        {label && <LabelStyled>{label}</LabelStyled>}\n        {subTitle && <SubTitle>{subTitle}</SubTitle>}\n      </Col>\n      <Col style={{ paddingTop: '30px' }}>\n        <CheckBox name={name} onToggle={updateField} />\n      </Col>\n    </Row>\n  );\n};\n\n// Upload input\nexport const InputBoxUpload: React.FC<InputConfigUpload> = (props) => {\n\n  const { \n    label,\n    subTitle,\n    onChange,\n    name,\n  } = props;\n\n  const updateField = \n  (e: any) => {\n    onChange(\n      e.target.name, \n      e.target.files[0]);\n  };\n\n  return (\n    <>\n      {label && <LabelStyled>{label}</LabelStyled>}\n      <UploadBox name={name} onChange={updateField} subTitle={subTitle || ''} />      \n    </>\n  );\n};\n\n// selectBox input\nexport const InputBoxSelect: React.FC<SelectType> = (props) => {\n\n  const { \n    label,\n    subTitle,\n    boxOptions,\n    onChange,\n    name,\n  } = props;\n\n  const updateField = (e: {label: string, value: string}) => {\n    onChange(\n      name, \n      e.value);\n  };\n\n  return (\n    <>\n      {label && <LabelStyled>{label}</LabelStyled> }\n      <Select onChange={updateField} options={boxOptions} />\n      {subTitle && <SubTitle>{subTitle}</SubTitle>}\n    </>  \n  );\n};\n\n// Standard input for properties\nexport const InputBoxProperties: React.FC<StandartType> = (props) => {\n\n  const { \n    label,\n    subTitle,\n    name,\n  } = props;\n\n  return (\n    <>\n      {label && <LabelStyled>{label}</LabelStyled> }\n      <Row>\n        <Col size=\"50\">\n          <Input key={`key-${name}`} full light />\n        </Col>\n        <Col size=\"50\">\n          <Input key={`value-${name}`} full light />\n        </Col>\n      </Row>\n      {subTitle && <SubTitle>{subTitle}</SubTitle>}\n    </>\n     \n  );\n};"]},"metadata":{},"sourceType":"module"}