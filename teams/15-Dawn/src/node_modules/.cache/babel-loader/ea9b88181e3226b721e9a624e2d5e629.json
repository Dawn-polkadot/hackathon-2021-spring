{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/apple/Documents/do/game/boka/hackathon-2021-spring/teams/15-Dawn/src/src/components/common/LoadingSpinner/LoadingSpinner.tsx\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport Loader from 'react-loader-spinner';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nconst Overlay = styled.div`\n  height: 100%;\n  width: 100%;\n  position: fixed;\n  z-index: 2000;\n  left: 0;\n  top: 0;\n  background-color: rgb(0, 0, 0);\n  background-color: rgba(0, 0, 0, 0.9);\n  overflow-x: hidden;\n`;\n_c = Overlay;\nconst OverlayTitle = styled.div`\n  text-align:center;\n  color:white;\n  padding-top:20px;\n`;\n_c2 = OverlayTitle;\nconst OverlayContent = styled.div`\n  position: relative;\n  top: 40%;\n  width: 100%;\n  text-align: center;\n  color:white;\n`;\n_c3 = OverlayContent;\n\nconst LoadingSpinner = () => /*#__PURE__*/_jsxDEV(_Fragment, {\n  children: /*#__PURE__*/_jsxDEV(Overlay, {\n    children: [/*#__PURE__*/_jsxDEV(OverlayTitle, {\n      children: \"loading....\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(OverlayContent, {\n      children: /*#__PURE__*/_jsxDEV(Loader, {\n        type: \"TailSpin\",\n        color: \"#00BFFF\",\n        height: 80,\n        width: 80\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this)\n}, void 0, false);\n\n_c4 = LoadingSpinner;\nexport default LoadingSpinner;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Overlay\");\n$RefreshReg$(_c2, \"OverlayTitle\");\n$RefreshReg$(_c3, \"OverlayContent\");\n$RefreshReg$(_c4, \"LoadingSpinner\");","map":{"version":3,"sources":["/Users/apple/Documents/do/game/boka/hackathon-2021-spring/teams/15-Dawn/src/src/components/common/LoadingSpinner/LoadingSpinner.tsx"],"names":["React","styled","Loader","Overlay","div","OverlayTitle","OverlayContent","LoadingSpinner"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAO,+DAAP;AAEA,MAAMC,OAAO,GAAGF,MAAM,CAACG,GAAI;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAVA;KAAMD,O;AAYN,MAAME,YAAY,GAAGJ,MAAM,CAACG,GAAI;AAChC;AACA;AACA;AACA,CAJA;MAAMC,Y;AAMN,MAAMC,cAAc,GAAGL,MAAM,CAACG,GAAI;AAClC;AACA;AACA;AACA;AACA;AACA,CANA;MAAME,c;;AAQN,MAAMC,cAAwB,GAAG,mBAC/B;AAAA,yBACE,QAAC,OAAD;AAAA,4BACE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAKE,QAAC,cAAD;AAAA,6BACE,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,UAAb;AAAwB,QAAA,KAAK,EAAC,SAA9B;AAAwC,QAAA,MAAM,EAAE,EAAhD;AAAoD,QAAA,KAAK,EAAE;AAA3D;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,iBADF;;MAAMA,c;AAcN,eAAeA,cAAf","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport Loader from 'react-loader-spinner';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\n\nconst Overlay = styled.div`\n  height: 100%;\n  width: 100%;\n  position: fixed;\n  z-index: 2000;\n  left: 0;\n  top: 0;\n  background-color: rgb(0, 0, 0);\n  background-color: rgba(0, 0, 0, 0.9);\n  overflow-x: hidden;\n`;\n\nconst OverlayTitle = styled.div`\n  text-align:center;\n  color:white;\n  padding-top:20px;\n`;\n\nconst OverlayContent = styled.div`\n  position: relative;\n  top: 40%;\n  width: 100%;\n  text-align: center;\n  color:white;\n`;\n\nconst LoadingSpinner: React.FC = () => (\n  <>\n    <Overlay>\n      <OverlayTitle>\n        loading....\n      </OverlayTitle>        \n        \n      <OverlayContent>          \n        <Loader type=\"TailSpin\" color=\"#00BFFF\" height={80} width={80} />\n      </OverlayContent>\n    </Overlay>\n  </>\n);\n\nexport default LoadingSpinner;"]},"metadata":{},"sourceType":"module"}